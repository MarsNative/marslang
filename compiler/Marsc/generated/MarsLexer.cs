//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Mars.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class MarsLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		WS=1, BLOCK_COMMENT=2, LINE_COMMENT=3, KW_PACKAGE=4, IDENTIFIER=5, INTEGER=6, 
		ADD=7, SUB=8, MULT=9, DIV=10, OPERATOR=11;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"DIGIT", "LETTER", "LC_LETTER", "UC_LETTER", "WS", "BLOCK_COMMENT", "LINE_COMMENT", 
		"KW_PACKAGE", "IDENTIFIER", "INTEGER", "ADD", "SUB", "MULT", "DIV", "OPERATOR"
	};


	public MarsLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public MarsLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, "'package'", null, null, "'+'", "'-'", "'*'", 
		"'/'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WS", "BLOCK_COMMENT", "LINE_COMMENT", "KW_PACKAGE", "IDENTIFIER", 
		"INTEGER", "ADD", "SUB", "MULT", "DIV", "OPERATOR"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Mars.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static MarsLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\r', '{', '\b', '\x1', '\x4', '\x2', '\t', '\x2', '\x4', 
		'\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', '\x5', 
		'\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', '\t', 
		'\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', '\t', 
		'\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x6', '\x6', '+', '\n', 
		'\x6', '\r', '\x6', '\xE', '\x6', ',', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\a', '\a', 
		'\x36', '\n', '\a', '\f', '\a', '\xE', '\a', '\x39', '\v', '\a', '\x3', 
		'\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\b', 
		'\x3', '\b', '\x3', '\b', '\x3', '\b', '\a', '\b', '\x44', '\n', '\b', 
		'\f', '\b', '\xE', '\b', 'G', '\v', '\b', '\x3', '\b', '\x5', '\b', 'J', 
		'\n', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', 
		'\x3', '\n', '\x6', '\n', 'W', '\n', '\n', '\r', '\n', '\xE', '\n', 'X', 
		'\x3', '\n', '\a', '\n', '\\', '\n', '\n', '\f', '\n', '\xE', '\n', '_', 
		'\v', '\n', '\x3', '\n', '\a', '\n', '\x62', '\n', '\n', '\f', '\n', '\xE', 
		'\n', '\x65', '\v', '\n', '\x5', '\n', 'g', '\n', '\n', '\x3', '\v', '\x6', 
		'\v', 'j', '\n', '\v', '\r', '\v', '\xE', '\v', 'k', '\x3', '\f', '\x3', 
		'\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', 
		'\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', 
		'\x5', '\x10', 'z', '\n', '\x10', '\x4', '\x37', '\x45', '\x2', '\x11', 
		'\x3', '\x2', '\x5', '\x2', '\a', '\x2', '\t', '\x2', '\v', '\x3', '\r', 
		'\x4', '\xF', '\x5', '\x11', '\x6', '\x13', '\a', '\x15', '\b', '\x17', 
		'\t', '\x19', '\n', '\x1B', '\v', '\x1D', '\f', '\x1F', '\r', '\x3', '\x2', 
		'\b', '\x3', '\x2', '\x32', ';', '\x4', '\x2', '\x43', '\\', '\x63', '|', 
		'\x3', '\x2', '\x63', '|', '\x3', '\x2', '\x43', '\\', '\x5', '\x2', '\x2', 
		'\x2', '\v', '\xF', '\"', '\"', '\x3', '\x3', '\f', '\f', '\x2', '\x82', 
		'\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x1F', '\x3', '\x2', '\x2', '\x2', '\x3', '!', '\x3', '\x2', '\x2', '\x2', 
		'\x5', '#', '\x3', '\x2', '\x2', '\x2', '\a', '%', '\x3', '\x2', '\x2', 
		'\x2', '\t', '\'', '\x3', '\x2', '\x2', '\x2', '\v', '*', '\x3', '\x2', 
		'\x2', '\x2', '\r', '\x30', '\x3', '\x2', '\x2', '\x2', '\xF', '?', '\x3', 
		'\x2', '\x2', '\x2', '\x11', 'M', '\x3', '\x2', '\x2', '\x2', '\x13', 
		'V', '\x3', '\x2', '\x2', '\x2', '\x15', 'i', '\x3', '\x2', '\x2', '\x2', 
		'\x17', 'm', '\x3', '\x2', '\x2', '\x2', '\x19', 'o', '\x3', '\x2', '\x2', 
		'\x2', '\x1B', 'q', '\x3', '\x2', '\x2', '\x2', '\x1D', 's', '\x3', '\x2', 
		'\x2', '\x2', '\x1F', 'y', '\x3', '\x2', '\x2', '\x2', '!', '\"', '\t', 
		'\x2', '\x2', '\x2', '\"', '\x4', '\x3', '\x2', '\x2', '\x2', '#', '$', 
		'\t', '\x3', '\x2', '\x2', '$', '\x6', '\x3', '\x2', '\x2', '\x2', '%', 
		'&', '\t', '\x4', '\x2', '\x2', '&', '\b', '\x3', '\x2', '\x2', '\x2', 
		'\'', '(', '\t', '\x5', '\x2', '\x2', '(', '\n', '\x3', '\x2', '\x2', 
		'\x2', ')', '+', '\t', '\x6', '\x2', '\x2', '*', ')', '\x3', '\x2', '\x2', 
		'\x2', '+', ',', '\x3', '\x2', '\x2', '\x2', ',', '*', '\x3', '\x2', '\x2', 
		'\x2', ',', '-', '\x3', '\x2', '\x2', '\x2', '-', '.', '\x3', '\x2', '\x2', 
		'\x2', '.', '/', '\b', '\x6', '\x2', '\x2', '/', '\f', '\x3', '\x2', '\x2', 
		'\x2', '\x30', '\x31', '\a', '\x31', '\x2', '\x2', '\x31', '\x32', '\a', 
		',', '\x2', '\x2', '\x32', '\x37', '\x3', '\x2', '\x2', '\x2', '\x33', 
		'\x36', '\x5', '\r', '\a', '\x2', '\x34', '\x36', '\v', '\x2', '\x2', 
		'\x2', '\x35', '\x33', '\x3', '\x2', '\x2', '\x2', '\x35', '\x34', '\x3', 
		'\x2', '\x2', '\x2', '\x36', '\x39', '\x3', '\x2', '\x2', '\x2', '\x37', 
		'\x38', '\x3', '\x2', '\x2', '\x2', '\x37', '\x35', '\x3', '\x2', '\x2', 
		'\x2', '\x38', ':', '\x3', '\x2', '\x2', '\x2', '\x39', '\x37', '\x3', 
		'\x2', '\x2', '\x2', ':', ';', '\a', ',', '\x2', '\x2', ';', '<', '\a', 
		'\x31', '\x2', '\x2', '<', '=', '\x3', '\x2', '\x2', '\x2', '=', '>', 
		'\b', '\a', '\x2', '\x2', '>', '\xE', '\x3', '\x2', '\x2', '\x2', '?', 
		'@', '\a', '\x31', '\x2', '\x2', '@', '\x41', '\a', '\x31', '\x2', '\x2', 
		'\x41', '\x45', '\x3', '\x2', '\x2', '\x2', '\x42', '\x44', '\v', '\x2', 
		'\x2', '\x2', '\x43', '\x42', '\x3', '\x2', '\x2', '\x2', '\x44', 'G', 
		'\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\x3', '\x2', '\x2', '\x2', 
		'\x45', '\x43', '\x3', '\x2', '\x2', '\x2', '\x46', 'I', '\x3', '\x2', 
		'\x2', '\x2', 'G', '\x45', '\x3', '\x2', '\x2', '\x2', 'H', 'J', '\t', 
		'\a', '\x2', '\x2', 'I', 'H', '\x3', '\x2', '\x2', '\x2', 'J', 'K', '\x3', 
		'\x2', '\x2', '\x2', 'K', 'L', '\b', '\b', '\x2', '\x2', 'L', '\x10', 
		'\x3', '\x2', '\x2', '\x2', 'M', 'N', '\a', 'r', '\x2', '\x2', 'N', 'O', 
		'\a', '\x63', '\x2', '\x2', 'O', 'P', '\a', '\x65', '\x2', '\x2', 'P', 
		'Q', '\a', 'm', '\x2', '\x2', 'Q', 'R', '\a', '\x63', '\x2', '\x2', 'R', 
		'S', '\a', 'i', '\x2', '\x2', 'S', 'T', '\a', 'g', '\x2', '\x2', 'T', 
		'\x12', '\x3', '\x2', '\x2', '\x2', 'U', 'W', '\x5', '\x5', '\x3', '\x2', 
		'V', 'U', '\x3', '\x2', '\x2', '\x2', 'W', 'X', '\x3', '\x2', '\x2', '\x2', 
		'X', 'V', '\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\x3', '\x2', '\x2', '\x2', 
		'Y', '\x66', '\x3', '\x2', '\x2', '\x2', 'Z', '\\', '\x5', '\x3', '\x2', 
		'\x2', '[', 'Z', '\x3', '\x2', '\x2', '\x2', '\\', '_', '\x3', '\x2', 
		'\x2', '\x2', ']', '[', '\x3', '\x2', '\x2', '\x2', ']', '^', '\x3', '\x2', 
		'\x2', '\x2', '^', '\x63', '\x3', '\x2', '\x2', '\x2', '_', ']', '\x3', 
		'\x2', '\x2', '\x2', '`', '\x62', '\x5', '\x5', '\x3', '\x2', '\x61', 
		'`', '\x3', '\x2', '\x2', '\x2', '\x62', '\x65', '\x3', '\x2', '\x2', 
		'\x2', '\x63', '\x61', '\x3', '\x2', '\x2', '\x2', '\x63', '\x64', '\x3', 
		'\x2', '\x2', '\x2', '\x64', 'g', '\x3', '\x2', '\x2', '\x2', '\x65', 
		'\x63', '\x3', '\x2', '\x2', '\x2', '\x66', ']', '\x3', '\x2', '\x2', 
		'\x2', '\x66', 'g', '\x3', '\x2', '\x2', '\x2', 'g', '\x14', '\x3', '\x2', 
		'\x2', '\x2', 'h', 'j', '\x5', '\x3', '\x2', '\x2', 'i', 'h', '\x3', '\x2', 
		'\x2', '\x2', 'j', 'k', '\x3', '\x2', '\x2', '\x2', 'k', 'i', '\x3', '\x2', 
		'\x2', '\x2', 'k', 'l', '\x3', '\x2', '\x2', '\x2', 'l', '\x16', '\x3', 
		'\x2', '\x2', '\x2', 'm', 'n', '\a', '-', '\x2', '\x2', 'n', '\x18', '\x3', 
		'\x2', '\x2', '\x2', 'o', 'p', '\a', '/', '\x2', '\x2', 'p', '\x1A', '\x3', 
		'\x2', '\x2', '\x2', 'q', 'r', '\a', ',', '\x2', '\x2', 'r', '\x1C', '\x3', 
		'\x2', '\x2', '\x2', 's', 't', '\a', '\x31', '\x2', '\x2', 't', '\x1E', 
		'\x3', '\x2', '\x2', '\x2', 'u', 'z', '\x5', '\x17', '\f', '\x2', 'v', 
		'z', '\x5', '\x19', '\r', '\x2', 'w', 'z', '\x5', '\x1B', '\xE', '\x2', 
		'x', 'z', '\x5', '\x1D', '\xF', '\x2', 'y', 'u', '\x3', '\x2', '\x2', 
		'\x2', 'y', 'v', '\x3', '\x2', '\x2', '\x2', 'y', 'w', '\x3', '\x2', '\x2', 
		'\x2', 'y', 'x', '\x3', '\x2', '\x2', '\x2', 'z', ' ', '\x3', '\x2', '\x2', 
		'\x2', '\xE', '\x2', ',', '\x35', '\x37', '\x45', 'I', 'X', ']', '\x63', 
		'\x66', 'k', 'y', '\x3', '\x2', '\x3', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
