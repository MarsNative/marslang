//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Mars.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MarsLang.Compiler {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class MarsLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		WS=1, BLOCK_COMMENT=2, LINE_COMMENT=3, KW_PACKAGE=4, KW_FUNC=5, KW_TYPE=6, 
		SYM_LPAREN=7, SYM_RPAREN=8, SYM_LBRACE=9, SYM_RBRACE=10, SYM_LBRACKET=11, 
		SYM_RBRACKET=12, SYM_LANGLE=13, SYM_RANGLE=14, SYM_COMMA=15, SYM_SEMICOLON=16, 
		SYM_DOT=17, IDENTIFIER=18, INTEGER=19, ADD=20, SUB=21, MUL=22, DIV=23, 
		OPERATOR=24;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"DIGIT", "LETTER", "LC_LETTER", "UC_LETTER", "WS", "BLOCK_COMMENT", "LINE_COMMENT", 
		"KW_PACKAGE", "KW_FUNC", "KW_TYPE", "SYM_LPAREN", "SYM_RPAREN", "SYM_LBRACE", 
		"SYM_RBRACE", "SYM_LBRACKET", "SYM_RBRACKET", "SYM_LANGLE", "SYM_RANGLE", 
		"SYM_COMMA", "SYM_SEMICOLON", "SYM_DOT", "IDENTIFIER", "INTEGER", "ADD", 
		"SUB", "MUL", "DIV", "OPERATOR"
	};


	public MarsLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public MarsLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, "'package'", "'func'", "'type'", "'('", "')'", 
		"'{'", "'}'", "'['", "']'", "'<'", "'>'", "','", "';'", "'.'", null, null, 
		"'+'", "'-'", "'*'", "'/'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WS", "BLOCK_COMMENT", "LINE_COMMENT", "KW_PACKAGE", "KW_FUNC", 
		"KW_TYPE", "SYM_LPAREN", "SYM_RPAREN", "SYM_LBRACE", "SYM_RBRACE", "SYM_LBRACKET", 
		"SYM_RBRACKET", "SYM_LANGLE", "SYM_RANGLE", "SYM_COMMA", "SYM_SEMICOLON", 
		"SYM_DOT", "IDENTIFIER", "INTEGER", "ADD", "SUB", "MUL", "DIV", "OPERATOR"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Mars.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static MarsLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x1A', '\xAE', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x6', 
		'\x6', '\x45', '\n', '\x6', '\r', '\x6', '\xE', '\x6', '\x46', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', 
		'\x3', '\a', '\a', '\a', 'P', '\n', '\a', '\f', '\a', '\xE', '\a', 'S', 
		'\v', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', 
		'\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\a', '\b', 
		'^', '\n', '\b', '\f', '\b', '\xE', '\b', '\x61', '\v', '\b', '\x3', '\b', 
		'\x5', '\b', '\x64', '\n', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', 
		'\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', 
		'\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', 
		'\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x3', '\x15', 
		'\x3', '\x16', '\x3', '\x16', '\x3', '\x17', '\x6', '\x17', '\x91', '\n', 
		'\x17', '\r', '\x17', '\xE', '\x17', '\x92', '\x3', '\x17', '\x3', '\x17', 
		'\a', '\x17', '\x97', '\n', '\x17', '\f', '\x17', '\xE', '\x17', '\x9A', 
		'\v', '\x17', '\x3', '\x18', '\x6', '\x18', '\x9D', '\n', '\x18', '\r', 
		'\x18', '\xE', '\x18', '\x9E', '\x3', '\x19', '\x3', '\x19', '\x3', '\x1A', 
		'\x3', '\x1A', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1C', '\x3', '\x1C', 
		'\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1D', '\x5', '\x1D', 
		'\xAD', '\n', '\x1D', '\x4', 'Q', '_', '\x2', '\x1E', '\x3', '\x2', '\x5', 
		'\x2', '\a', '\x2', '\t', '\x2', '\v', '\x3', '\r', '\x4', '\xF', '\x5', 
		'\x11', '\x6', '\x13', '\a', '\x15', '\b', '\x17', '\t', '\x19', '\n', 
		'\x1B', '\v', '\x1D', '\f', '\x1F', '\r', '!', '\xE', '#', '\xF', '%', 
		'\x10', '\'', '\x11', ')', '\x12', '+', '\x13', '-', '\x14', '/', '\x15', 
		'\x31', '\x16', '\x33', '\x17', '\x35', '\x18', '\x37', '\x19', '\x39', 
		'\x1A', '\x3', '\x2', '\b', '\x3', '\x2', '\x32', ';', '\x4', '\x2', '\x43', 
		'\\', '\x63', '|', '\x3', '\x2', '\x63', '|', '\x3', '\x2', '\x43', '\\', 
		'\x5', '\x2', '\x2', '\x2', '\v', '\xF', '\"', '\"', '\x3', '\x3', '\f', 
		'\f', '\x2', '\xB4', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', 
		')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', '/', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x31', '\x3', '\x2', '\x2', '\x2', '\x2', '\x33', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x35', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x37', '\x3', '\x2', '\x2', '\x2', '\x2', '\x39', '\x3', '\x2', '\x2', 
		'\x2', '\x3', ';', '\x3', '\x2', '\x2', '\x2', '\x5', '=', '\x3', '\x2', 
		'\x2', '\x2', '\a', '?', '\x3', '\x2', '\x2', '\x2', '\t', '\x41', '\x3', 
		'\x2', '\x2', '\x2', '\v', '\x44', '\x3', '\x2', '\x2', '\x2', '\r', 'J', 
		'\x3', '\x2', '\x2', '\x2', '\xF', 'Y', '\x3', '\x2', '\x2', '\x2', '\x11', 
		'g', '\x3', '\x2', '\x2', '\x2', '\x13', 'o', '\x3', '\x2', '\x2', '\x2', 
		'\x15', 't', '\x3', '\x2', '\x2', '\x2', '\x17', 'y', '\x3', '\x2', '\x2', 
		'\x2', '\x19', '{', '\x3', '\x2', '\x2', '\x2', '\x1B', '}', '\x3', '\x2', 
		'\x2', '\x2', '\x1D', '\x7F', '\x3', '\x2', '\x2', '\x2', '\x1F', '\x81', 
		'\x3', '\x2', '\x2', '\x2', '!', '\x83', '\x3', '\x2', '\x2', '\x2', '#', 
		'\x85', '\x3', '\x2', '\x2', '\x2', '%', '\x87', '\x3', '\x2', '\x2', 
		'\x2', '\'', '\x89', '\x3', '\x2', '\x2', '\x2', ')', '\x8B', '\x3', '\x2', 
		'\x2', '\x2', '+', '\x8D', '\x3', '\x2', '\x2', '\x2', '-', '\x90', '\x3', 
		'\x2', '\x2', '\x2', '/', '\x9C', '\x3', '\x2', '\x2', '\x2', '\x31', 
		'\xA0', '\x3', '\x2', '\x2', '\x2', '\x33', '\xA2', '\x3', '\x2', '\x2', 
		'\x2', '\x35', '\xA4', '\x3', '\x2', '\x2', '\x2', '\x37', '\xA6', '\x3', 
		'\x2', '\x2', '\x2', '\x39', '\xAC', '\x3', '\x2', '\x2', '\x2', ';', 
		'<', '\t', '\x2', '\x2', '\x2', '<', '\x4', '\x3', '\x2', '\x2', '\x2', 
		'=', '>', '\t', '\x3', '\x2', '\x2', '>', '\x6', '\x3', '\x2', '\x2', 
		'\x2', '?', '@', '\t', '\x4', '\x2', '\x2', '@', '\b', '\x3', '\x2', '\x2', 
		'\x2', '\x41', '\x42', '\t', '\x5', '\x2', '\x2', '\x42', '\n', '\x3', 
		'\x2', '\x2', '\x2', '\x43', '\x45', '\t', '\x6', '\x2', '\x2', '\x44', 
		'\x43', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\x3', '\x2', '\x2', 
		'\x2', '\x46', '\x44', '\x3', '\x2', '\x2', '\x2', '\x46', 'G', '\x3', 
		'\x2', '\x2', '\x2', 'G', 'H', '\x3', '\x2', '\x2', '\x2', 'H', 'I', '\b', 
		'\x6', '\x2', '\x2', 'I', '\f', '\x3', '\x2', '\x2', '\x2', 'J', 'K', 
		'\a', '\x31', '\x2', '\x2', 'K', 'L', '\a', ',', '\x2', '\x2', 'L', 'Q', 
		'\x3', '\x2', '\x2', '\x2', 'M', 'P', '\x5', '\r', '\a', '\x2', 'N', 'P', 
		'\v', '\x2', '\x2', '\x2', 'O', 'M', '\x3', '\x2', '\x2', '\x2', 'O', 
		'N', '\x3', '\x2', '\x2', '\x2', 'P', 'S', '\x3', '\x2', '\x2', '\x2', 
		'Q', 'R', '\x3', '\x2', '\x2', '\x2', 'Q', 'O', '\x3', '\x2', '\x2', '\x2', 
		'R', 'T', '\x3', '\x2', '\x2', '\x2', 'S', 'Q', '\x3', '\x2', '\x2', '\x2', 
		'T', 'U', '\a', ',', '\x2', '\x2', 'U', 'V', '\a', '\x31', '\x2', '\x2', 
		'V', 'W', '\x3', '\x2', '\x2', '\x2', 'W', 'X', '\b', '\a', '\x2', '\x2', 
		'X', '\xE', '\x3', '\x2', '\x2', '\x2', 'Y', 'Z', '\a', '\x31', '\x2', 
		'\x2', 'Z', '[', '\a', '\x31', '\x2', '\x2', '[', '_', '\x3', '\x2', '\x2', 
		'\x2', '\\', '^', '\v', '\x2', '\x2', '\x2', ']', '\\', '\x3', '\x2', 
		'\x2', '\x2', '^', '\x61', '\x3', '\x2', '\x2', '\x2', '_', '`', '\x3', 
		'\x2', '\x2', '\x2', '_', ']', '\x3', '\x2', '\x2', '\x2', '`', '\x63', 
		'\x3', '\x2', '\x2', '\x2', '\x61', '_', '\x3', '\x2', '\x2', '\x2', '\x62', 
		'\x64', '\t', '\a', '\x2', '\x2', '\x63', '\x62', '\x3', '\x2', '\x2', 
		'\x2', '\x64', '\x65', '\x3', '\x2', '\x2', '\x2', '\x65', '\x66', '\b', 
		'\b', '\x2', '\x2', '\x66', '\x10', '\x3', '\x2', '\x2', '\x2', 'g', 'h', 
		'\a', 'r', '\x2', '\x2', 'h', 'i', '\a', '\x63', '\x2', '\x2', 'i', 'j', 
		'\a', '\x65', '\x2', '\x2', 'j', 'k', '\a', 'm', '\x2', '\x2', 'k', 'l', 
		'\a', '\x63', '\x2', '\x2', 'l', 'm', '\a', 'i', '\x2', '\x2', 'm', 'n', 
		'\a', 'g', '\x2', '\x2', 'n', '\x12', '\x3', '\x2', '\x2', '\x2', 'o', 
		'p', '\a', 'h', '\x2', '\x2', 'p', 'q', '\a', 'w', '\x2', '\x2', 'q', 
		'r', '\a', 'p', '\x2', '\x2', 'r', 's', '\a', '\x65', '\x2', '\x2', 's', 
		'\x14', '\x3', '\x2', '\x2', '\x2', 't', 'u', '\a', 'v', '\x2', '\x2', 
		'u', 'v', '\a', '{', '\x2', '\x2', 'v', 'w', '\a', 'r', '\x2', '\x2', 
		'w', 'x', '\a', 'g', '\x2', '\x2', 'x', '\x16', '\x3', '\x2', '\x2', '\x2', 
		'y', 'z', '\a', '*', '\x2', '\x2', 'z', '\x18', '\x3', '\x2', '\x2', '\x2', 
		'{', '|', '\a', '+', '\x2', '\x2', '|', '\x1A', '\x3', '\x2', '\x2', '\x2', 
		'}', '~', '\a', '}', '\x2', '\x2', '~', '\x1C', '\x3', '\x2', '\x2', '\x2', 
		'\x7F', '\x80', '\a', '\x7F', '\x2', '\x2', '\x80', '\x1E', '\x3', '\x2', 
		'\x2', '\x2', '\x81', '\x82', '\a', ']', '\x2', '\x2', '\x82', ' ', '\x3', 
		'\x2', '\x2', '\x2', '\x83', '\x84', '\a', '_', '\x2', '\x2', '\x84', 
		'\"', '\x3', '\x2', '\x2', '\x2', '\x85', '\x86', '\a', '>', '\x2', '\x2', 
		'\x86', '$', '\x3', '\x2', '\x2', '\x2', '\x87', '\x88', '\a', '@', '\x2', 
		'\x2', '\x88', '&', '\x3', '\x2', '\x2', '\x2', '\x89', '\x8A', '\a', 
		'.', '\x2', '\x2', '\x8A', '(', '\x3', '\x2', '\x2', '\x2', '\x8B', '\x8C', 
		'\a', '=', '\x2', '\x2', '\x8C', '*', '\x3', '\x2', '\x2', '\x2', '\x8D', 
		'\x8E', '\a', '\x30', '\x2', '\x2', '\x8E', ',', '\x3', '\x2', '\x2', 
		'\x2', '\x8F', '\x91', '\x5', '\x5', '\x3', '\x2', '\x90', '\x8F', '\x3', 
		'\x2', '\x2', '\x2', '\x91', '\x92', '\x3', '\x2', '\x2', '\x2', '\x92', 
		'\x90', '\x3', '\x2', '\x2', '\x2', '\x92', '\x93', '\x3', '\x2', '\x2', 
		'\x2', '\x93', '\x98', '\x3', '\x2', '\x2', '\x2', '\x94', '\x97', '\x5', 
		'\x3', '\x2', '\x2', '\x95', '\x97', '\x5', '\x5', '\x3', '\x2', '\x96', 
		'\x94', '\x3', '\x2', '\x2', '\x2', '\x96', '\x95', '\x3', '\x2', '\x2', 
		'\x2', '\x97', '\x9A', '\x3', '\x2', '\x2', '\x2', '\x98', '\x96', '\x3', 
		'\x2', '\x2', '\x2', '\x98', '\x99', '\x3', '\x2', '\x2', '\x2', '\x99', 
		'.', '\x3', '\x2', '\x2', '\x2', '\x9A', '\x98', '\x3', '\x2', '\x2', 
		'\x2', '\x9B', '\x9D', '\x5', '\x3', '\x2', '\x2', '\x9C', '\x9B', '\x3', 
		'\x2', '\x2', '\x2', '\x9D', '\x9E', '\x3', '\x2', '\x2', '\x2', '\x9E', 
		'\x9C', '\x3', '\x2', '\x2', '\x2', '\x9E', '\x9F', '\x3', '\x2', '\x2', 
		'\x2', '\x9F', '\x30', '\x3', '\x2', '\x2', '\x2', '\xA0', '\xA1', '\a', 
		'-', '\x2', '\x2', '\xA1', '\x32', '\x3', '\x2', '\x2', '\x2', '\xA2', 
		'\xA3', '\a', '/', '\x2', '\x2', '\xA3', '\x34', '\x3', '\x2', '\x2', 
		'\x2', '\xA4', '\xA5', '\a', ',', '\x2', '\x2', '\xA5', '\x36', '\x3', 
		'\x2', '\x2', '\x2', '\xA6', '\xA7', '\a', '\x31', '\x2', '\x2', '\xA7', 
		'\x38', '\x3', '\x2', '\x2', '\x2', '\xA8', '\xAD', '\x5', '\x31', '\x19', 
		'\x2', '\xA9', '\xAD', '\x5', '\x33', '\x1A', '\x2', '\xAA', '\xAD', '\x5', 
		'\x35', '\x1B', '\x2', '\xAB', '\xAD', '\x5', '\x37', '\x1C', '\x2', '\xAC', 
		'\xA8', '\x3', '\x2', '\x2', '\x2', '\xAC', '\xA9', '\x3', '\x2', '\x2', 
		'\x2', '\xAC', '\xAA', '\x3', '\x2', '\x2', '\x2', '\xAC', '\xAB', '\x3', 
		'\x2', '\x2', '\x2', '\xAD', ':', '\x3', '\x2', '\x2', '\x2', '\r', '\x2', 
		'\x46', 'O', 'Q', '_', '\x63', '\x92', '\x96', '\x98', '\x9E', '\xAC', 
		'\x3', '\x2', '\x3', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace MarsLang.Compiler
